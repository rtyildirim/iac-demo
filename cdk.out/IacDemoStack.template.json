{
  "Resources": {
    "BlogTable4F8B6C55": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "blogId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "blogId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "TableName": "iacDemoBlogTable"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/BlogTable/Resource"
      }
    },
    "IacDemoFunctionServiceRoleBDC9F624": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoFunction/ServiceRole/Resource"
      }
    },
    "IacDemoFunctionServiceRoleDefaultPolicy68CFB3E5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "BlogTable4F8B6C55",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "IacDemoFunctionServiceRoleDefaultPolicy68CFB3E5",
        "Roles": [
          {
            "Ref": "IacDemoFunctionServiceRoleBDC9F624"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "IacDemoFunctionEDE7E209": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters72f287be44ae8b387e11098cd234f4547c81e77fe12c49a92fbee7af43acbfddS3Bucket21377BCD"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters72f287be44ae8b387e11098cd234f4547c81e77fe12c49a92fbee7af43acbfddS3VersionKeyE0584E52"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters72f287be44ae8b387e11098cd234f4547c81e77fe12c49a92fbee7af43acbfddS3VersionKeyE0584E52"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IacDemoFunctionServiceRoleBDC9F624",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "BLOG_TABLE_NAME": {
              "Ref": "BlogTable4F8B6C55"
            }
          }
        },
        "Handler": "main",
        "MemorySize": 128,
        "Runtime": "go1.x",
        "Timeout": 10
      },
      "DependsOn": [
        "IacDemoFunctionServiceRoleDefaultPolicy68CFB3E5",
        "IacDemoFunctionServiceRoleBDC9F624"
      ],
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoFunction/Resource",
        "aws:asset:path": "asset.72f287be44ae8b387e11098cd234f4547c81e77fe12c49a92fbee7af43acbfdd.zip",
        "aws:asset:property": "Code"
      }
    },
    "IacDemoRestApiEB9AC4F8": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "Rest API Demo Using CDK",
        "Name": "IacDemoRestApi"
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Resource"
      }
    },
    "IacDemoRestApiCloudWatchRole41B4769F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/CloudWatchRole/Resource"
      }
    },
    "IacDemoRestApiAccountCD80792E": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "IacDemoRestApiCloudWatchRole41B4769F",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "IacDemoRestApiEB9AC4F8"
      ],
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Account"
      }
    },
    "IacDemoRestApiDeploymentA6B926936525be57528825073594c82739004de7": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "IacDemoRestApiEB9AC4F8"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "IacDemoRestApiblogsblogIdGET6AFE6856",
        "IacDemoRestApiblogsblogIdOPTIONS76038038",
        "IacDemoRestApiblogsblogId2C0C4DBD",
        "IacDemoRestApiblogsGET9C1FA21B",
        "IacDemoRestApiblogsOPTIONS209BC069",
        "IacDemoRestApiblogsPOST79B4BD54",
        "IacDemoRestApiblogs74069DBE",
        "IacDemoRestApiOPTIONS880AF6C7"
      ],
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Deployment/Resource"
      }
    },
    "IacDemoRestApiDeploymentStagebetaEEF821DD": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "IacDemoRestApiEB9AC4F8"
        },
        "DeploymentId": {
          "Ref": "IacDemoRestApiDeploymentA6B926936525be57528825073594c82739004de7"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "MetricsEnabled": true,
            "ResourcePath": "/*"
          }
        ],
        "StageName": "beta"
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/DeploymentStage.beta/Resource"
      }
    },
    "IacDemoRestApiOPTIONS880AF6C7": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Fn::GetAtt": [
            "IacDemoRestApiEB9AC4F8",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "IacDemoRestApiEB9AC4F8"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/OPTIONS/Resource"
      }
    },
    "IacDemoRestApiblogs74069DBE": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "IacDemoRestApiEB9AC4F8",
            "RootResourceId"
          ]
        },
        "PathPart": "blogs",
        "RestApiId": {
          "Ref": "IacDemoRestApiEB9AC4F8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/blogs/Resource"
      }
    },
    "IacDemoRestApiblogsOPTIONS209BC069": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IacDemoRestApiblogs74069DBE"
        },
        "RestApiId": {
          "Ref": "IacDemoRestApiEB9AC4F8"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/blogs/OPTIONS/Resource"
      }
    },
    "IacDemoRestApiblogsGETApiPermissionIacDemoStackIacDemoRestApi3F65DA59GETblogs38C02DC3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "IacDemoFunctionEDE7E209",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "IacDemoRestApiEB9AC4F8"
              },
              "/",
              {
                "Ref": "IacDemoRestApiDeploymentStagebetaEEF821DD"
              },
              "/GET/blogs"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/blogs/GET/ApiPermission.IacDemoStackIacDemoRestApi3F65DA59.GET..blogs"
      }
    },
    "IacDemoRestApiblogsGETApiPermissionTestIacDemoStackIacDemoRestApi3F65DA59GETblogs93C208FC": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "IacDemoFunctionEDE7E209",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "IacDemoRestApiEB9AC4F8"
              },
              "/test-invoke-stage/GET/blogs"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/blogs/GET/ApiPermission.Test.IacDemoStackIacDemoRestApi3F65DA59.GET..blogs"
      }
    },
    "IacDemoRestApiblogsGET9C1FA21B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "IacDemoRestApiblogs74069DBE"
        },
        "RestApiId": {
          "Ref": "IacDemoRestApiEB9AC4F8"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "IacDemoFunctionEDE7E209",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/blogs/GET/Resource"
      }
    },
    "IacDemoRestApiblogsPOSTApiPermissionIacDemoStackIacDemoRestApi3F65DA59POSTblogs570C8307": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "IacDemoFunctionEDE7E209",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "IacDemoRestApiEB9AC4F8"
              },
              "/",
              {
                "Ref": "IacDemoRestApiDeploymentStagebetaEEF821DD"
              },
              "/POST/blogs"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/blogs/POST/ApiPermission.IacDemoStackIacDemoRestApi3F65DA59.POST..blogs"
      }
    },
    "IacDemoRestApiblogsPOSTApiPermissionTestIacDemoStackIacDemoRestApi3F65DA59POSTblogs4420BCF9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "IacDemoFunctionEDE7E209",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "IacDemoRestApiEB9AC4F8"
              },
              "/test-invoke-stage/POST/blogs"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/blogs/POST/ApiPermission.Test.IacDemoStackIacDemoRestApi3F65DA59.POST..blogs"
      }
    },
    "IacDemoRestApiblogsPOST79B4BD54": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "IacDemoRestApiblogs74069DBE"
        },
        "RestApiId": {
          "Ref": "IacDemoRestApiEB9AC4F8"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "IacDemoFunctionEDE7E209",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/blogs/POST/Resource"
      }
    },
    "IacDemoRestApiblogsblogId2C0C4DBD": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "IacDemoRestApiblogs74069DBE"
        },
        "PathPart": "{blogId}",
        "RestApiId": {
          "Ref": "IacDemoRestApiEB9AC4F8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/blogs/{blogId}/Resource"
      }
    },
    "IacDemoRestApiblogsblogIdOPTIONS76038038": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IacDemoRestApiblogsblogId2C0C4DBD"
        },
        "RestApiId": {
          "Ref": "IacDemoRestApiEB9AC4F8"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/blogs/{blogId}/OPTIONS/Resource"
      }
    },
    "IacDemoRestApiblogsblogIdGETApiPermissionIacDemoStackIacDemoRestApi3F65DA59GETblogsblogId2CE3C0D3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "IacDemoFunctionEDE7E209",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "IacDemoRestApiEB9AC4F8"
              },
              "/",
              {
                "Ref": "IacDemoRestApiDeploymentStagebetaEEF821DD"
              },
              "/GET/blogs/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/blogs/{blogId}/GET/ApiPermission.IacDemoStackIacDemoRestApi3F65DA59.GET..blogs.{blogId}"
      }
    },
    "IacDemoRestApiblogsblogIdGETApiPermissionTestIacDemoStackIacDemoRestApi3F65DA59GETblogsblogIdA0D825B4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "IacDemoFunctionEDE7E209",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "IacDemoRestApiEB9AC4F8"
              },
              "/test-invoke-stage/GET/blogs/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/blogs/{blogId}/GET/ApiPermission.Test.IacDemoStackIacDemoRestApi3F65DA59.GET..blogs.{blogId}"
      }
    },
    "IacDemoRestApiblogsblogIdGET6AFE6856": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "IacDemoRestApiblogsblogId2C0C4DBD"
        },
        "RestApiId": {
          "Ref": "IacDemoRestApiEB9AC4F8"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "IacDemoFunctionEDE7E209",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/IacDemoRestApi/Default/blogs/{blogId}/GET/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/02RzU6EMBCAn8V76Yoavcqu8WYk6AsM7ch2oS3ptG4I4d1ty2I4zTf/fyUvH174/d0rXKkQsj/Mwjrk85cH0bMGyQYnkFVE6KOtU6ZjJ2vIuyA8O/2YGhxo9OiS8hn8GLL5PzNyjJfKK2sWlrrMcjKgrWz5/A3tkEMyLGwA3Urg83swIiUk155rdFoR5VIKNJ8bu+ZnWdtBiSnHZVoYPRaQJieeF4g6PwbRoz8CIYNRdeDxClMshOSrUd1G37ASwgbj2RuOg500mrzbTksnyQOssG2dy3+gP1uZnDfa32TjZVmYsRL5hQ6/5RMvn+MzLqRU4WJjpZE3q/wDaF35lakBAAA="
      },
      "Metadata": {
        "aws:cdk:path": "IacDemoStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "AssetParameters72f287be44ae8b387e11098cd234f4547c81e77fe12c49a92fbee7af43acbfddS3Bucket21377BCD": {
      "Type": "String",
      "Description": "S3 bucket for asset \"72f287be44ae8b387e11098cd234f4547c81e77fe12c49a92fbee7af43acbfdd\""
    },
    "AssetParameters72f287be44ae8b387e11098cd234f4547c81e77fe12c49a92fbee7af43acbfddS3VersionKeyE0584E52": {
      "Type": "String",
      "Description": "S3 key for asset version \"72f287be44ae8b387e11098cd234f4547c81e77fe12c49a92fbee7af43acbfdd\""
    },
    "AssetParameters72f287be44ae8b387e11098cd234f4547c81e77fe12c49a92fbee7af43acbfddArtifactHash77A2839F": {
      "Type": "String",
      "Description": "Artifact hash for asset \"72f287be44ae8b387e11098cd234f4547c81e77fe12c49a92fbee7af43acbfdd\""
    }
  },
  "Outputs": {
    "IacDemoRestApiEndpoint97BF39FB": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "IacDemoRestApiEB9AC4F8"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "IacDemoRestApiDeploymentStagebetaEEF821DD"
            },
            "/"
          ]
        ]
      }
    },
    "apiUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "IacDemoRestApiEB9AC4F8"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "IacDemoRestApiDeploymentStagebetaEEF821DD"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}